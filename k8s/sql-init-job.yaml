apiVersion: v1
kind: ConfigMap
metadata:
  name: sql-init-script
  namespace: 88-api
data:
  init.sql: |
    -- Create users table
    CREATE TABLE IF NOT EXISTS users (
        id TEXT PRIMARY KEY,
        email TEXT NOT NULL UNIQUE,
        password TEXT NOT NULL,
        name TEXT NOT NULL,
        created_at INTEGER NOT NULL,
        updated_at INTEGER NOT NULL
    );

    -- Create items table
    CREATE TABLE IF NOT EXISTS items (
        id TEXT PRIMARY KEY,
        name TEXT NOT NULL,
        description TEXT,
        price REAL NOT NULL,
        user_id TEXT NOT NULL,
        created_at INTEGER NOT NULL,
        updated_at INTEGER NOT NULL,
        FOREIGN KEY (user_id) REFERENCES users(id)
    );

    -- Create refresh_tokens table
    CREATE TABLE IF NOT EXISTS refresh_tokens (
        id TEXT PRIMARY KEY,
        token TEXT NOT NULL UNIQUE,
        user_id TEXT NOT NULL,
        expires_at INTEGER NOT NULL,
        created_at INTEGER NOT NULL,
        FOREIGN KEY (user_id) REFERENCES users(id)
    );
---
apiVersion: batch/v1
kind: Job
metadata:
  name: sql-init-job
  namespace: 88-api
spec:
  template:
    spec:
      containers:
      - name: sql-init
        image: alpine:latest
        command: ["/bin/sh"]
        args:
        - -c
        - |
          apk add --no-cache sqlite
          echo "Creating database..."
          sqlite3 /app/data/data.db < /app/init.sql
          echo "Database created successfully!"
          sqlite3 /app/data/data.db ".tables"
        volumeMounts:
        - name: data-volume
          mountPath: /app/data
        - name: sql-script
          mountPath: /app/init.sql
          subPath: init.sql
        workingDir: /app
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: backend-pvc
      - name: sql-script
        configMap:
          name: sql-init-script
      restartPolicy: Never
  backoffLimit: 3 